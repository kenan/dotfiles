
((digest . "d19b67b406905a1e78abccc0168c1714") (undo-list nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2151) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2151) (t 20135 . 44389) nil (2158 . 2161) nil (#("  
" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t syntax-table nil face font-lock-string-face) 2 3 (fontified t face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("  end" 0 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("    :price => 29.95)" 0 4 (fontified t face font-lock-string-face) 4 10 (fontified t face font-lock-string-face) 10 19 (fontified t face font-lock-string-face) 19 20 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("    :image_url =>   '/images/auto.jpg',    " 0 4 (fontified t face font-lock-string-face) 4 14 (fontified t face font-lock-string-face) 14 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 37 (fontified t) 37 38 (fontified t face font-lock-string-face) 38 42 (fontified t face font-lock-string-face) 42 43 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("      </p>}," 0 11 (fontified t face font-lock-string-face) 11 12 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("        exciting---and difficult---stuff, like writing quality code." 0 19 (fontified t face font-lock-string-face) 19 22 (fontified t face font-lock-string-face) 22 67 (fontified t face font-lock-string-face) 67 68 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("        youll have more time and energy to do the really " 0 11 (fontified t face font-lock-string-face) 11 29 (fontified t face font-lock-string-face) 29 32 (fontified t face font-lock-string-face) 32 43 (fontified t face font-lock-string-face) 43 45 (fontified t face font-lock-string-face) 45 56 (fontified t face font-lock-string-face) 56 57 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("        for you doing the mundane (but important) project stuff. That means " 0 8 (fontified t face font-lock-string-face) 8 11 (fontified t face font-lock-string-face) 11 65 (fontified t face font-lock-string-face) 65 69 (fontified t face font-lock-string-face) 69 75 (fontified t face font-lock-string-face) 75 76 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("        Simply put, were going to put this thing called a computer to work " 0 8 (fontified t face font-lock-string-face) 8 14 (fontified t face font-lock-string-face) 14 22 (fontified t face font-lock-string-face) 22 74 (fontified t face font-lock-string-face) 74 75 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("      <p>" 0 8 (fontified t face font-lock-string-face) 8 9 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("      </p>" 0 9 (fontified t face font-lock-string-face) 9 10 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("       automation to reduce risk and errors." 0 33 (fontified t face font-lock-string-face) 33 36 (fontified t face font-lock-string-face) 36 43 (fontified t face font-lock-string-face) 43 44 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("       consistency and repeatability of your projects procedures using " 0 19 (fontified t face font-lock-string-face) 19 22 (fontified t face font-lock-string-face) 22 52 (fontified t face font-lock-string-face) 52 70 (fontified t face font-lock-string-face) 70 71 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("       <em>Pragmatic Project Automation</em> shows you how to improve the " 0 11 (fontified t face font-lock-string-face) 11 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 39 (fontified t face font-lock-string-face) 39 73 (fontified t face font-lock-string-face) 73 74 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("    %{<p>" 0 4 (fontified t face font-lock-string-face) 4 8 (fontified t face font-lock-string-face) 8 9 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("                   :description => " 0 19 (fontified t face font-lock-string-face) 19 31 (fontified t face font-lock-string-face) 31 34 (fontified t face font-lock-string-face) 34 35 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("    Product.create(:title => 'Pragmatic Project Automation'," 0 4 (fontified t face font-lock-string-face) 4 11 (fontified t face font-lock-string-face) 11 19 (fontified t face font-lock-string-face) 19 25 (fontified t face font-lock-string-face) 25 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 39 (fontified t face font-lock-type-face) 39 40 (fontified t) 40 47 (fontified t face font-lock-type-face) 47 48 (fontified t) 48 58 (fontified t face font-lock-type-face) 58 59 (fontified t face font-lock-string-face) 59 60 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (#("    
" 0 3 (fontified t face font-lock-string-face) 3 4 (fontified t syntax-table nil face font-lock-string-face) 4 5 (fontified t face font-lock-string-face)) . 2159) ((marker . 2160) . -5) ((marker . 2160) . -5) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 2159) nil (#("    Product.delete_all" 0 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t syntax-table nil face font-lock-string-face)) . 2159) nil (nil rear-nonsticky nil 2158 . 2159) (nil fontified nil 59 . 2159) (59 . 2159) nil (77 . 78) nil (#("." 0 1 (fontified t)) . 77) (t 20135 . 44331) nil (148 . 167) (#("     " 0 5 (fontified nil)) . -148) (147 . 148) nil (#(" " 0 1 (fontified t)) . -147) nil (#("
" 0 1 (fontified t)) . -147) nil (#(" " 0 1 (fontified t)) . -148) nil (#(" " 0 1 (fontified t)) . -148) nil (#(" " 0 1 (fontified t)) . -149) nil (#(" " 0 1 (fontified t)) . -150) nil (#(" " 0 1 (fontified t)) . -151) nil (#(" " 0 1 (fontified t)) . -152) nil (#(" " 0 1 (fontified t)) . -153) nil (#(" " 0 1 (fontified t)) . -154) nil (#(" " 0 1 (fontified t)) . -154) nil (#(" " 0 1 (fontified t)) . -155) nil (#(" " 0 1 (fontified t)) . -156) nil (#(" " 0 1 (fontified t)) . -157) nil (#(" " 0 1 (fontified t)) . -158) (t 20135 . 44317) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . 571) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . 429) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . 321) (t 20135 . 44286) nil (773 . 776) nil (768 . 770) 771 nil (768 . 771) (t 20135 . 44274) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 768) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 768) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 770) nil (#("  end" 0 2 (fontified t face font-lock-string-face) 2 4 (fontified t face font-lock-string-face) 4 5 (fontified t syntax-table nil face font-lock-string-face)) . 770) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 770) nil (#("    :price => 28.50)" 0 19 (fontified t face font-lock-string-face) 19 20 (fontified t syntax-table nil face font-lock-string-face)) . 770) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 770) nil (#("    :image_url => '/images/svn.jpg'," 0 19 (fontified t face font-lock-string-face) 19 34 (fontified t) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t syntax-table nil face font-lock-string-face)) . 770) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 770) nil (#("      </p>}," 0 11 (fontified t face font-lock-string-face) 11 12 (fontified t syntax-table nil face font-lock-string-face)) . 770) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 770) nil (#("         up experiencing time-consuming problems." 0 48 (fontified t face font-lock-string-face) 48 49 (fontified t syntax-table nil face font-lock-string-face)) . 770) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 770) nil (#("         any version control at all. Many others don't use it well, and end " 0 37 (fontified t face font-lock-string-face) 37 41 (fontified t face font-lock-string-face) 41 52 (fontified t face font-lock-string-face) 52 53 (fontified t face font-lock-string-face) 53 68 (fontified t) 68 71 (fontified t face font-lock-keyword-face) 71 72 (fontified t) 72 75 (fontified t face font-lock-keyword-face) 75 76 (fontified t syntax-table nil)) . 770) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 770) nil (#("         infrastructure. Yet half of all project teams in the U.S. don't use" 0 71 (fontified t face font-lock-string-face) 71 75 (fontified t) 75 76 (fontified t syntax-table nil)) . 770) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 770) nil (#("         version control: it's a foundational piece of any project's " 0 29 (fontified t face font-lock-string-face) 29 66 (fontified t) 66 68 (fontified t face font-lock-string-face) 68 69 (fontified t syntax-table nil face font-lock-string-face)) . 770) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 770) nil (#("         get you up and running quickly---and correctly. All projects need" 0 73 (fontified t face font-lock-string-face) 73 74 (fontified t syntax-table nil face font-lock-string-face)) . 770) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 770) nil (#("         This book is a recipe-based approach to using Subversion that will " 0 75 (fontified t face font-lock-string-face) 75 76 (fontified t syntax-table nil face font-lock-string-face)) . 770) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 770) nil (#("      %{<p>" 0 10 (fontified t face font-lock-string-face) 10 11 (fontified t syntax-table nil face font-lock-string-face)) . 770) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 770) nil (#("      :description =>" 0 20 (fontified t face font-lock-string-face) 20 21 (fontified t syntax-table nil face font-lock-string-face)) . 770) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 770) nil (#("    Product.create(:title => 'Pragmatic Version Control'," 0 30 (fontified t face font-lock-string-face) 30 39 (fontified t face font-lock-type-face) 39 40 (fontified t) 40 47 (fontified t face font-lock-type-face) 47 48 (fontified t) 48 55 (fontified t face font-lock-type-face) 55 56 (fontified t face font-lock-string-face) 56 57 (fontified t syntax-table nil face font-lock-string-face)) . 770) (t 20135 . 44260) nil (#("    
" 0 3 (fontified t face font-lock-string-face) 3 4 (fontified t syntax-table nil face font-lock-string-face) 4 5 (fontified t face font-lock-string-face)) . 1359) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("
" 0 1 (rear-nonsticky t fontified t face font-lock-string-face)) . 1364) nil (#("    :price => 27.75)" 0 19 (fontified t face font-lock-string-face) 19 20 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("    :image_url => '/images/utc.jpg'," 0 19 (fontified t face font-lock-string-face) 19 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 34 (fontified t) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("      </p>}," 0 11 (fontified t face font-lock-string-face) 11 12 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("        expect them." 0 19 (fontified t face font-lock-string-face) 19 20 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("        your mallet helplessly as the moles continue to pop up where you least " 0 78 (fontified t face font-lock-string-face) 78 79 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("        of the field. The moles pop up and down so fast that you end up flailing " 0 80 (fontified t face font-lock-string-face) 80 81 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("        mechanical mole; it retreats and another mole pops up on the opposite side " 0 37 (fontified t face font-lock-string-face) 37 40 (fontified t face font-lock-string-face) 40 82 (fontified t face font-lock-string-face) 82 83 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("        \"whack-a-mole.\" That's the carnival game where the player strikes at a " 0 8 (fontified t face font-lock-string-face) 8 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 78 (fontified t) 78 79 (fontified t syntax-table nil)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("        Without good tests in place, coding can become a frustrating game of " 0 8 (fontified t face font-lock-string-face) 8 15 (fontified t face font-lock-string-face) 15 27 (fontified t face font-lock-string-face) 27 29 (fontified t face font-lock-string-face) 29 76 (fontified t face font-lock-string-face) 76 77 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("      <p>" 0 8 (fontified t face font-lock-string-face) 8 9 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("      </p>" 0 9 (fontified t face font-lock-string-face) 9 10 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("        coding comes from unit testing." 0 38 (fontified t face font-lock-string-face) 38 39 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("        personal processes. The most valuable feedback you can get while " 0 28 (fontified t face font-lock-string-face) 28 31 (fontified t face font-lock-string-face) 31 67 (fontified t face font-lock-string-face) 67 72 (fontified t face font-lock-string-face) 72 73 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("        Pragmatic programmers use feedback to drive their development and " 0 8 (fontified t face font-lock-string-face) 8 17 (fontified t face font-lock-string-face) 17 70 (fontified t face font-lock-string-face) 70 73 (fontified t face font-lock-string-face) 73 74 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("    %{<p>" 0 8 (fontified t face font-lock-string-face) 8 9 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("    :description => " 0 4 (fontified t face font-lock-string-face) 4 16 (fontified t face font-lock-string-face) 16 19 (fontified t face font-lock-string-face) 19 20 (fontified t syntax-table nil face font-lock-string-face)) . 1364) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1364) nil (#("    Product.create(:title => 'Pragmatic Unit Testing (C#)'," 0 30 (fontified t face font-lock-string-face) 30 39 (fontified t face font-lock-type-face) 39 40 (fontified t) 40 44 (fontified t face font-lock-type-face) 44 45 (fontified t) 45 52 (fontified t face font-lock-type-face) 52 54 (fontified t) 54 55 (fontified t face font-lock-type-face) 55 56 (fontified t face font-lock-comment-delimiter-face) 56 58 (fontified t face font-lock-comment-face) 58 59 (fontified t syntax-table nil face font-lock-comment-face)) . 1364) (t 20135 . 44213) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1363) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . 1363) nil (#("." 0 1 (fontified t syntax-table nil face font-lock-string-face)) . 1363) nil (#(" " 0 1 (fontified t face font-lock-string-face)) . 1363) nil (#("." 0 1 (fontified t face font-lock-string-face)) . 1363) nil (#(" " 0 1 (fontified t face font-lock-string-face)) . 1363) nil (#("." 0 1 (fontified t face font-lock-string-face)) . 1363) nil (#(" " 0 1 (fontified t face font-lock-string-face)) . 1363) nil (#("#" 0 1 (fontified t face font-lock-string-face)) . 1363) nil (81 . 86) (t 20135 . 44065) nil (#(" " 0 1 (fontified t)) . 183) nil (#(" " 0 1 (fontified t)) . 179) nil (#(" " 0 1 (fontified t)) . 179) nil (#(" " 0 1 (fontified t)) . 179) nil (#(" " 0 1 (fontified t)) . 179) nil (#(" " 0 1 (fontified t)) . 179) nil (#(" " 0 1 (fontified t)) . 179) nil (#(" " 0 1 (fontified t)) . 179) nil (#(" " 0 1 (fontified t)) . 179) nil (#(" " 0 1 (fontified t)) . 179) nil (#(" " 0 1 (fontified t)) . 179) nil (#(" " 0 1 (fontified t)) . 179) nil (#(" " 0 1 (fontified t)) . 179) nil (#(" " 0 1 (fontified t)) . 179) nil (#(" " 0 1 (fontified t)) . 179) nil (179 . 198) (#("    " 0 4 (fontified t)) . -179) 188 nil (143 . 162) (#("    " 0 4 (fontified t)) . -143) nil (82 . 86) (#("        " 0 3 (fontified t) 3 4 (fontified t) 4 8 (fontified t)) . -82) 83 ((marker . 59) . -4) ((marker . 2160) . -4) nil (2123 . 2124) nil (2123 . 2124) nil (2123 . 2124) nil (#("svn" 0 3 (fontified t)) . 2123) (t 20135 . 43832) nil (2123 . 2126) nil (#("c" 0 1 (fontified t)) . 2123) nil (#("t" 0 1 (fontified t)) . 2123) nil (#("u" 0 1 (fontified t)) . 2123) nil (2093 . 2094) nil (#("}" 0 1 (fontified t face font-lock-string-face)) . 2093) nil (nil rear-nonsticky nil 2153 . 2154) (nil fontified nil 86 . 2154) (86 . 2154) nil (81 . 86) nil (58 . 81) (t 20135 . 43465)))
